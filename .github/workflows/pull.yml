name: PullLint
on: [ pull_request ]
jobs:
  # This workflow closes invalid PR
  close-pr:
    name: closepr
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Get PR commit message
        id: pr
        run: |
          commitmessage=$(git log --format=%B -n 1)
          echo "message=$commitmessage" > $GITHUB_OUTPUT
          echo "set message=$commitmessage"

      # Runs a set of commands using the runners shell
      - name: Close PR if commit message is "Update main.go"
        if: steps.pr.outputs.message == 'Update main.go'
        run: |
          echo "Closing this PR because commit message is 'Update main.go'"
          gh pr close ${{ github.event.pull_request.number }} --delete-branch
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  golangci:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@master
        with:
          go-version: '1.20'

      - name: Check out code into the Go module directory
        uses: actions/checkout@master

      - name: golangci-lint
        uses: golangci/golangci-lint-action@master
        with:
          # Optional: version of golangci-lint to use in form of v1.2 or v1.2.3 or `latest` to use the latest version
          version: latest

          # Optional: working directory, useful for monorepos
          # working-directory: somedir

          # Optional: golangci-lint command line arguments.
          # args: --issues-exit-code=0

          # Optional: show only new issues if it's a pull request. The default value is `false`.
          # only-new-issues: true

          # Optional: if set to true then the action don't cache or restore ~/go/pkg.
          # skip-pkg-cache: true

          # Optional: if set to true then the action don't cache or restore ~/.cache/go-build.
          # skip-build-cache: true
